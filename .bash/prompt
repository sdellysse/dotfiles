# vim: ft=sh

PROMPT_COLOR_BLUE="\[\e[34;1m\]"
PROMPT_COLOR_BOLD="\[\033[1m\]"
PROMPT_COLOR_GREEN="\[\e[32;1m\]"
PROMPT_COLOR_RED="\[\033[1;31m\]"
PROMPT_COLOR_RESET="\[\033[m\]"
PROMPT_COLOR_YELLOW="\[\e[33;1m\]"
PROMPT_DIRECTORY_LENGTH_CUTOFF=16

function PROMPT_in_git_repo() {
    [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1
}

function PROMPT_not_home_repo() {
    [ "$( git rev-parse --show-toplevel 2>&1 )" != "$HOME" ]
}

function PROMPT_current_git_branch() {
    git rev-parse --abbrev-ref HEAD
}

function PROMPT_function() {
    local last_errno="$?"

    local exitstatus=
    if [ "${last_errno}" -eq 0 ]; then
      exitstatus="${PROMPT_COLOR_GREEN} :)"
    else
      exitstatus="${PROMPT_COLOR_RED}$( printf "%3s" "${last_errno}" )"
    fi

    local username=
    if [ "${UID}" -eq 0 ]; then
      username="${PROMPT_COLOR_RED}${USER}${PROMPT_COLOR_RESET}"
    else
      username="${PROMPT_COLOR_GREEN}${USER}${PROMPT_COLOR_RESET}"
    fi

    local dirs_str="$( dirs )"
    local pwd_str=
    if [ "${#dirs_str}" -gt "$PROMPT_DIRECTORY_LENGTH_CUTOFF" ]; then
        pwd_str="$(dirs | awk -F '/' -v ORS='/' '{
            for (i = 1; i < NF; i++) {
                print substr($i, 0, 1);
            }
            printf "%s", $NF;
        }')"
    else
        pwd_str="$dirs_str"
    fi

    local git_str=
    if PROMPT_in_git_repo && PROMPT_not_home_repo ; then
        git_str="${PROMPT_COLOR_GREEN}[$( PROMPT_current_git_branch )]${PROMPT_COLOR_RESET} "
    fi

    PS1="${username}@${PROMPT_COLOR_YELLOW}\h${PROMPT_COLOR_RESET} ${PROMPT_COLOR_BOLD}${exitstatus}${PROMPT_COLOR_RESET} ${PROMPT_COLOR_BLUE}${pwd_str}${PROMPT_COLOR_RESET} ${git_str}\$ "
    PS2="${PROMPT_COLOR_BOLD}>${PROMPT_COLOR_RESET} "
}

PROMPT_COMMAND=PROMPT_function

export MYSQL_PS1="[\\d]> "

touch "$HOME/opt/.bash/prompt" && source "$HOME/opt/.bash/prompt"
